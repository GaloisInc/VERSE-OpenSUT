name: Docker Image CI

on:
  push:
    # branches:
    #   - 'main'

env:
  CERBERUS_IMAGE_ID: ghcr.io/galoisinc/cerberus:release
  OPENSUT_BASE_IMAGE_ID: ghcr.io/galoisinc/opensut-base:latest

jobs:
  # cerberus:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: false
  #   - name: Checkout Cerberus submodule
  #     run: git submodule update --init src/cerberus
  #   - name: Login to GitHub Container Registry
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.VERSE_OPENSUT_ACCESS_TOKEN }}
  #   - name: Build the Docker image
  #     run: |
  #       echo "Building ${{env.CERBERUS_IMAGE_ID}}"
  #       cd src/cerberus
  #       make -f Makefile_docker release
  #       docker tag cerberus:release ${{env.CERBERUS_IMAGE_ID}}
  #   - name: Push the Docker image
  #     run: docker push ${{env.CERBERUS_IMAGE_ID}}

  # opensut-base:
  #   # Builds the base platform docker image with appropriate dependencies
  #   # but no VERSE specific code is built.
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: false
  #   - name: Login to GitHub Container Registry
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.VERSE_OPENSUT_ACCESS_TOKEN }}
  #   - name: Build the Docker image
  #     run: |
  #       echo "Building ${{env.OPENSUT_BASE_IMAGE_ID}}"
  #       docker build . --file Dockerfile --tag ${{env.OPENSUT_BASE_IMAGE_ID}}
  #   - name: Push the Docker image
  #     run: docker push ${{env.OPENSUT_BASE_IMAGE_ID}}

  disk-images:
    # Job that builds the disk_host and disk_guest images
    # needs: opensut-base
    runs-on: ubuntu-latest
    # Custom timeout might be needed, the default is 360 minutes
    # timeout-minutes: 360
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
          #token: ${{ secrets.VERSE_VHOST_DEVICE_ACCESS_TOKEN }}
      - name: Build disk images
        uses: addnab/docker-run-action@v3
        with:
          # NOTE: addnab/docker-run-action@v3 doesn't seem to support
          # ${{env.OPENSUT_BASE_IMAGE_ID}} for image name, not quite sure why
          # Hardcoded image value is needed
          image: ${{env.OPENSUT_BASE_IMAGE_ID}}
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.VERSE_OPENSUT_ACCESS_TOKEN }}
          options: -v ${{ github.workspace }}:/work -w /work
          run: |
            # Build the host and guest disk images.  This takes 1-2 hours.
            #cd src/pkvm_setup
            #bash create_disk_images.sh
            #cd /work
            # Build our patched version of QEMU in the host VM.  This takes 1-2 hours.
            #cd src/pkvm_setup
            #bash run_vm_script.sh vms/disk_host.img vm_scripts/install_qemu.sh
            ls -l
      - name: Save the disk images
        run: echo "TBD"
