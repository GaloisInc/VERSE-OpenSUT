name: Docker Image CI

on:
  push:
    paths:
      - 'src/cerberus'

env:
  CERBERUS_IMAGE_NAME: cerberus:release
  OPENSUT_BASE_IMAGE_NAME: opensut-base:latest
  CERBERUS_IMAGE_ID: ghcr.io/galoisinc/$CERBERUS_IMAGE_NAME
  OPENSUT_BASE_IMAGE_ID: ghcr.io/galoisinc/$OPENSUT_BASE_IMAGE_NAME

jobs:

  changes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false
    - name: Checkout Cerberus submodule
      run: git submodule update --init src/cerberus
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          cerberus:
            - 'src/cerberus/**'
          docker-base:
            - 'Dockerfile'

  cerberus:
    # Wait from the paths-filter to be completed before starting next-job
    needs: changes
    if: needs.changes.outputs.cerberus == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false
    - name: Checkout Cerberus submodule
      run: git submodule update --init src/cerberus
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.VERSE_OPENSUT_ACCESS_TOKEN }}
    - name: Build the Docker image
      run: |
        echo "Building ${{env.CERBERUS_IMAGE_ID}}"
        cd src/cerberus
        make -f Makefile_docker release
        docker tag cerberus:release ${{env.CERBERUS_IMAGE_ID}}
    - name: Push the Docker image
      run: docker push ${{env.CERBERUS_IMAGE_ID}}

  opensut-base:
    # Wait from the paths-filter to be completed before starting next-job
    needs: changes
    if: needs.changes.outputs.docker-base == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        token: ${{ secrets.VERSE_VHOST_DEVICE_ACCESS_TOKEN }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.VERSE_OPENSUT_ACCESS_TOKEN }}
    - name: Build the Docker image
      run: |
        echo "Building ${{env.OPENSUT_BASE_IMAGE_ID}}"
        docker build . --file Dockerfile --tag ${{env.OPENSUT_BASE_IMAGE_ID}}
    - name: Push the Docker image
      run: docker push ${{env.OPENSUT_BASE_IMAGE_ID}}
