# This is a basic workflow to help you get started with Actions

name: basic CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  mps-build:
      runs-on: ubuntu-22.04
      steps:
        - name: Checkout repository and submodules
          uses: actions/checkout@v4
        - name: Build MPS
          uses: addnab/docker-run-action@v3
          with:
            image: galoisinc/hardens:latest
            options: -v ${{ github.workspace }}:/HARDENS
            run: |
              cd components/mission_protection_system/src
              SENSORS=NotSimulated SELF_TEST=Enabled make rts
              make clean
              SENSORS=NotSimulated SELF_TEST=Enabled make rts_bottom

  mps-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
      - name: Build MPS
        uses: addnab/docker-run-action@v3
        with:
          image: galoisinc/hardens:latest
          options: -v ${{ github.workspace }}:/HARDENS
          run: |
            cd components/mission_protection_system/src
            make clean
            SENSORS=NotSimulated SELF_TEST=Disabled make rts
            mv rts rts.no_self_test
            make clean
            SENSORS=NotSimulated SELF_TEST=Enabled make rts
            mv rts rts.self_test
            cd ../tests
            pip3 install -r requirements.txt
            RTS_DEBUG=1 QUICK=1 python3 ./run_all.py

  vmrunner:
    runs-on: ubuntu-22.04
    steps:
    - uses: hecrj/setup-rust-action@v2
      with:
        rust-version: 1.74
        targets: aarch64-unknown-linux-gnu
    - uses: actions/checkout@master
    - name: Build VM runner
      run: cd src/vm_runner && cargo build --release --target aarch64-unknown-linux-gnu
    # - name: Archive code coverage results
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: code-coverage-report
    #     path: output/test/code-coverage.html
